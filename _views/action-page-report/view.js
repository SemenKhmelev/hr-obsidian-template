console.log(
    "\n#################################################\n" +
    "      START HR ACTION REPORT VIEW BUILD           " +
    "\n#################################################\n"
);

var data = require(app.vault.adapter.basePath + "/_scripts/data.js");

const lists = input.dv.current().file.lists;

console.log("üî• –í–°–ï list-items:", lists);

// –û—Ç–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø-level —ç–ª–µ–º–µ–Ω—Ç—ã —Å key === "name"
const entries = lists.filter(li => li.name);

console.log("üî• –û–¢–°–ï–Ø–ù–ù–´–ï entries:", entries);

const areas = data.areas;
const metrics = data.metrics;
const metrics_ext = data.metrics_ext;

// –†–µ–Ω–¥–µ—Ä–∏–º –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
for (let entry of entries) {
    console.log("üî• –û–ë–†–ê–ë–û–¢–ö–ê entry:", entry);
    const record = { name: entry.name };
    console.log("   ‚Ä¢ name =", record.name);

    console.log("üî• –°–§–û–†–ú–ò–†–û–í–ê–ù record:", record);

    // –†–µ–Ω–¥–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    input.dv.header(2, `–°–æ—Ç—Ä—É–¥–Ω–∏–∫: ${record.name}`);

    input.dv.table(
        ["[[–ü–∞–º—è—Ç–∫–∞|–û–±–ª–∞—Å—Ç—å]]", "–ü—Ä–æ—Å—Ç—ã–µ", "–°—Ä–µ–¥–Ω–∏–µ", "–°–ª–æ–∂–Ω—ã–µ", "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"],
        areas.map(area => [
            area,
            entry[`${area} - –ø—Ä–æ—Å—Ç—ã–µ`]   || "",
            entry[`${area} - —Å—Ä–µ–¥–Ω–∏–µ`]   || "",
            entry[`${area} - —Å–ª–æ–∂–Ω—ã–µ`]   || "",
            entry[`${area} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π`] || ""
        ])
    );

    input.dv.table(
        ["[[–ü–∞–º—è—Ç–∫–∞|–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å]]", "–ó–Ω–∞—á–µ–Ω–∏–µ"],
        metrics.map(metric => [metric, entry[metric] || ""])
    );

    metrics_ext.forEach(metric => {
         if (entry[metric]) {
            input.dv.paragraph(`**${metric}**: ${entry[metric] || ""}`)}
    });
    
}

// ===== –î–∞–ª—å—à–µ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –ª—é–±—ã–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏, –≥—Ä–∞—Ñ–∏–∫–∏, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è =====
